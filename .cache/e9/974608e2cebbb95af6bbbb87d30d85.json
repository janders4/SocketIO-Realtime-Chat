{"id":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","dependencies":[{"name":"/Users/johnanderson/Desktop/useful_code/real-time-chat/package.json","includedInParent":true,"mtime":1567766940753},{"name":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/package.json","includedInParent":true,"mtime":1567766940159}],"generated":{"js":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*!\n * Copyright (c) 2018-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar ConfigurationValidationError = function (_Error) {\n  _inherits(ConfigurationValidationError, _Error);\n\n  function ConfigurationValidationError() {\n    _classCallCheck(this, ConfigurationValidationError);\n\n    return _possibleConstructorReturn(this, (ConfigurationValidationError.__proto__ || Object.getPrototypeOf(ConfigurationValidationError)).apply(this, arguments));\n  }\n\n  return ConfigurationValidationError;\n}(Error);\n\nvar configUtil = module.exports;\n\nvar findDomainURL = 'https://bit.ly/finding-okta-domain';\nvar findAppCredentialsURL = 'https://bit.ly/finding-okta-app-credentials';\n\nvar copyCredentialsMessage = 'You can copy it from the Okta Developer Console ' + 'in the details for the Application you created. ' + ('Follow these instructions to find it: ' + findAppCredentialsURL);\n\nvar isHttps = new RegExp('^https://');\nvar hasProtocol = new RegExp('://');\nvar hasDomainAdmin = /-admin.(okta|oktapreview|okta-emea).com/;\nvar hasDomainTypo = new RegExp('(.com.com)|(://.*){2,}');\nvar endsInPath = new RegExp('/$');\n\nconfigUtil.buildConfigObject = function (config) {\n  return {\n    clientId: config.clientId || config.client_id,\n    issuer: config.issuer,\n    redirectUri: config.redirectUri || config.redirect_uri,\n    tokenManager: {\n      storage: config.storage,\n      autoRenew: config.autoRenew || config.auto_renew\n    }\n  };\n};\n\nconfigUtil.assertIssuer = function (issuer) {\n  var testing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var copyMessage = 'You can copy your domain from the Okta Developer ' + 'Console. Follow these instructions to find it: ' + findDomainURL;\n\n  if (testing.disableHttpsCheck) {\n    var httpsWarning = 'Warning: HTTPS check is disabled. ' + 'This allows for insecure configurations and is NOT recommended for production use.';\n    /* eslint-disable-next-line no-console */\n    console.warn(httpsWarning);\n  }\n\n  if (!issuer) {\n    throw new ConfigurationValidationError('Your Okta URL is missing. ' + copyMessage);\n  } else if (!testing.disableHttpsCheck && !issuer.match(isHttps)) {\n    throw new ConfigurationValidationError('Your Okta URL must start with https. ' + ('Current value: ' + issuer + '. ' + copyMessage));\n  } else if (issuer.match(/{yourOktaDomain}/)) {\n    throw new ConfigurationValidationError('Replace {yourOktaDomain} with your Okta domain. ' + copyMessage);\n  } else if (issuer.match(hasDomainAdmin)) {\n    throw new ConfigurationValidationError('Your Okta domain should not contain -admin. ' + ('Current value: ' + issuer + '. ' + copyMessage));\n  } else if (issuer.match(hasDomainTypo)) {\n    throw new ConfigurationValidationError('It looks like there\\'s a typo in your Okta domain. ' + ('Current value: ' + issuer + '. ' + copyMessage));\n  }\n};\n\nconfigUtil.assertClientId = function (clientId) {\n  if (!clientId) {\n    throw new ConfigurationValidationError('Your client ID is missing. ' + copyCredentialsMessage);\n  } else if (clientId.match(/{clientId}/)) {\n    throw new ConfigurationValidationError('Replace {clientId} with the client ID of your Application. ' + copyCredentialsMessage);\n  }\n};\n\nconfigUtil.assertClientSecret = function (clientSecret) {\n  if (!clientSecret) {\n    throw new ConfigurationValidationError('Your client secret is missing. ' + copyCredentialsMessage);\n  } else if (clientSecret.match(/{clientSecret}/)) {\n    throw new ConfigurationValidationError('Replace {clientSecret} with the client secret of your Application. ' + copyCredentialsMessage);\n  }\n};\n\nconfigUtil.assertRedirectUri = function (redirectUri) {\n  if (!redirectUri) {\n    throw new ConfigurationValidationError('Your redirect URI is missing.');\n  } else if (redirectUri.match(/{redirectUri}/)) {\n    throw new ConfigurationValidationError('Replace {redirectUri} with the redirect URI of your Application.');\n  }\n};\n\nconfigUtil.assertAppBaseUrl = function (appBaseUrl) {\n  if (!appBaseUrl) {\n    throw new ConfigurationValidationError('Your appBaseUrl is missing.');\n  } else if (appBaseUrl.match(/{appBaseUrl}/)) {\n    throw new ConfigurationValidationError('Replace {appBaseUrl} with the base URL of your Application.');\n  } else if (!appBaseUrl.match(hasProtocol)) {\n    throw new ConfigurationValidationError('Your appBaseUrl must contain a protocol (e.g. https://). Current value: ' + appBaseUrl + '.');\n  } else if (appBaseUrl.match(endsInPath)) {\n    throw new ConfigurationValidationError('Your appBaseUrl must not end in a \\'/\\'. Current value: ' + appBaseUrl + '.');\n  }\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}}],"sources":{"../../node_modules/@okta/okta-react/node_modules/@okta/configuration-validation/dist/lib.js":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/*!\n * Copyright (c) 2018-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nvar ConfigurationValidationError = function (_Error) {\n  _inherits(ConfigurationValidationError, _Error);\n\n  function ConfigurationValidationError() {\n    _classCallCheck(this, ConfigurationValidationError);\n\n    return _possibleConstructorReturn(this, (ConfigurationValidationError.__proto__ || Object.getPrototypeOf(ConfigurationValidationError)).apply(this, arguments));\n  }\n\n  return ConfigurationValidationError;\n}(Error);\n\nvar configUtil = module.exports;\n\nvar findDomainURL = 'https://bit.ly/finding-okta-domain';\nvar findAppCredentialsURL = 'https://bit.ly/finding-okta-app-credentials';\n\nvar copyCredentialsMessage = 'You can copy it from the Okta Developer Console ' + 'in the details for the Application you created. ' + ('Follow these instructions to find it: ' + findAppCredentialsURL);\n\nvar isHttps = new RegExp('^https://');\nvar hasProtocol = new RegExp('://');\nvar hasDomainAdmin = /-admin.(okta|oktapreview|okta-emea).com/;\nvar hasDomainTypo = new RegExp('(.com.com)|(://.*){2,}');\nvar endsInPath = new RegExp('/$');\n\nconfigUtil.buildConfigObject = function (config) {\n  return {\n    clientId: config.clientId || config.client_id,\n    issuer: config.issuer,\n    redirectUri: config.redirectUri || config.redirect_uri,\n    tokenManager: {\n      storage: config.storage,\n      autoRenew: config.autoRenew || config.auto_renew\n    }\n  };\n};\n\nconfigUtil.assertIssuer = function (issuer) {\n  var testing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var copyMessage = 'You can copy your domain from the Okta Developer ' + 'Console. Follow these instructions to find it: ' + findDomainURL;\n\n  if (testing.disableHttpsCheck) {\n    var httpsWarning = 'Warning: HTTPS check is disabled. ' + 'This allows for insecure configurations and is NOT recommended for production use.';\n    /* eslint-disable-next-line no-console */\n    console.warn(httpsWarning);\n  }\n\n  if (!issuer) {\n    throw new ConfigurationValidationError('Your Okta URL is missing. ' + copyMessage);\n  } else if (!testing.disableHttpsCheck && !issuer.match(isHttps)) {\n    throw new ConfigurationValidationError('Your Okta URL must start with https. ' + ('Current value: ' + issuer + '. ' + copyMessage));\n  } else if (issuer.match(/{yourOktaDomain}/)) {\n    throw new ConfigurationValidationError('Replace {yourOktaDomain} with your Okta domain. ' + copyMessage);\n  } else if (issuer.match(hasDomainAdmin)) {\n    throw new ConfigurationValidationError('Your Okta domain should not contain -admin. ' + ('Current value: ' + issuer + '. ' + copyMessage));\n  } else if (issuer.match(hasDomainTypo)) {\n    throw new ConfigurationValidationError('It looks like there\\'s a typo in your Okta domain. ' + ('Current value: ' + issuer + '. ' + copyMessage));\n  }\n};\n\nconfigUtil.assertClientId = function (clientId) {\n  if (!clientId) {\n    throw new ConfigurationValidationError('Your client ID is missing. ' + copyCredentialsMessage);\n  } else if (clientId.match(/{clientId}/)) {\n    throw new ConfigurationValidationError('Replace {clientId} with the client ID of your Application. ' + copyCredentialsMessage);\n  }\n};\n\nconfigUtil.assertClientSecret = function (clientSecret) {\n  if (!clientSecret) {\n    throw new ConfigurationValidationError('Your client secret is missing. ' + copyCredentialsMessage);\n  } else if (clientSecret.match(/{clientSecret}/)) {\n    throw new ConfigurationValidationError('Replace {clientSecret} with the client secret of your Application. ' + copyCredentialsMessage);\n  }\n};\n\nconfigUtil.assertRedirectUri = function (redirectUri) {\n  if (!redirectUri) {\n    throw new ConfigurationValidationError('Your redirect URI is missing.');\n  } else if (redirectUri.match(/{redirectUri}/)) {\n    throw new ConfigurationValidationError('Replace {redirectUri} with the redirect URI of your Application.');\n  }\n};\n\nconfigUtil.assertAppBaseUrl = function (appBaseUrl) {\n  if (!appBaseUrl) {\n    throw new ConfigurationValidationError('Your appBaseUrl is missing.');\n  } else if (appBaseUrl.match(/{appBaseUrl}/)) {\n    throw new ConfigurationValidationError('Replace {appBaseUrl} with the base URL of your Application.');\n  } else if (!appBaseUrl.match(hasProtocol)) {\n    throw new ConfigurationValidationError('Your appBaseUrl must contain a protocol (e.g. https://). Current value: ' + appBaseUrl + '.');\n  } else if (appBaseUrl.match(endsInPath)) {\n    throw new ConfigurationValidationError('Your appBaseUrl must not end in a \\'/\\'. Current value: ' + appBaseUrl + '.');\n  }\n};"},"lineCount":116}},"error":null,"hash":"8a6c4f952d3c5a8d2eaf6a6781c8f218","cacheData":{"env":{}}}