{"id":"../../node_modules/@okta/okta-auth-js/lib/token.js","dependencies":[{"name":"/Users/johnanderson/Desktop/useful_code/real-time-chat/package.json","includedInParent":true,"mtime":1567766940753},{"name":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/package.json","includedInParent":true,"mtime":1567766940151},{"name":"./http","loc":{"line":15,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/http.js"},{"name":"./util","loc":{"line":16,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/util.js"},{"name":"./oauthUtil","loc":{"line":17,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/oauthUtil.js"},{"name":"q","loc":{"line":18,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/node_modules/q/q.js"},{"name":"./crypto","loc":{"line":19,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/crypto.js"},{"name":"./errors/AuthSdkError","loc":{"line":20,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/errors/AuthSdkError.js"},{"name":"./errors/OAuthError","loc":{"line":21,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/errors/OAuthError.js"},{"name":"./config","loc":{"line":22,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/config.js"},{"name":"./browser/browserStorage","loc":{"line":23,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/browser/browserStorage.js"},{"name":"./pkce","loc":{"line":24,"column":28},"parent":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/token.js","resolved":"/Users/johnanderson/Desktop/useful_code/real-time-chat/node_modules/@okta/okta-auth-js/lib/pkce.js"}],"generated":{"js":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nvar http          = require('./http');\nvar util          = require('./util');\nvar oauthUtil     = require('./oauthUtil');\nvar Q             = require('q');\nvar sdkCrypto     = require('./crypto');\nvar AuthSdkError  = require('./errors/AuthSdkError');\nvar OAuthError    = require('./errors/OAuthError');\nvar config        = require('./config');\nvar cookies       = require('./browser/browserStorage').storage;\nvar PKCE          = require('./pkce');\n\nfunction decodeToken(token) {\n  var jwt = token.split('.');\n  var decodedToken;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(util.base64UrlToString(jwt[0])),\n      payload: JSON.parse(util.base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch(e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n\nfunction verifyToken(sdk, token, validationParams) {\n  return new Q()\n  .then(function() {\n    if (!token || !token.idToken) {\n      throw new AuthSdkError('Only idTokens may be verified');\n    }\n\n    var jwt = decodeToken(token.idToken);\n\n    var validationOptions = {\n      clientId: sdk.options.clientId,\n      issuer: sdk.options.issuer || sdk.options.url,\n      ignoreSignature: sdk.options.ignoreSignature\n    };\n\n    util.extend(validationOptions, validationParams);\n\n    // Standard claim validation\n    oauthUtil.validateClaims(sdk, jwt.payload, validationOptions);\n\n    // If the browser doesn't support native crypto or we choose not\n    // to verify the signature, bail early\n    if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n      return token;\n    }\n\n    return oauthUtil.getKey(sdk, token.issuer, jwt.header.kid)\n    .then(function(key) {\n      return sdkCrypto.verifyToken(token.idToken, key);\n    })\n    .then(function(valid) {\n      if (!valid) {\n        throw new AuthSdkError('The token signature is not valid');\n      }\n      return token;\n    });\n  });\n}\n\nfunction addPostMessageListener(sdk, timeout, state) {\n  var deferred = Q.defer();\n\n  function responseHandler(e) {\n    if (!e.data ||\n        e.origin !== sdk.options.url ||\n        (e.data && util.isString(state) && e.data.state !== state)) {\n      return;\n    }\n    deferred.resolve(e.data);\n  }\n\n  oauthUtil.addListener(window, 'message', responseHandler);\n\n  return deferred.promise.timeout(timeout || 120000, new AuthSdkError('OAuth flow timed out'))\n    .fin(function() {\n      oauthUtil.removeListener(window, 'message', responseHandler);\n    });\n}\n\nfunction addFragmentListener(sdk, windowEl, timeout) {\n  var deferred = Q.defer();\n\n  function hashChangeHandler() {\n    /*\n      We are only able to access window.location.hash on a window\n      that has the same domain. A try/catch is necessary because\n      there's no other way to determine that the popup is in\n      another domain. When we try to access a window on another\n      domain, an error is thrown.\n    */\n    try {\n      if (windowEl &&\n          windowEl.location &&\n          windowEl.location.hash) {\n        deferred.resolve(oauthUtil.hashToObject(windowEl.location.hash));\n      } else if (windowEl && !windowEl.closed) {\n        setTimeout(hashChangeHandler, 500);\n      }\n    } catch (err) {\n      setTimeout(hashChangeHandler, 500);\n    }\n  }\n\n  hashChangeHandler();\n\n  return deferred.promise.timeout(timeout || 120000, new AuthSdkError('OAuth flow timed out'));\n}\n\nfunction exchangeCodeForToken(sdk, oauthParams, authorizationCode, urls) {\n  // PKCE authorization_code flow\n  // Retrieve saved values and build oauthParams for call to /token\n  var meta = PKCE.loadMeta(sdk);\n  var getTokenParams = {\n    clientId: oauthParams.clientId,\n    authorizationCode: authorizationCode,\n    codeVerifier: meta.codeVerifier,\n    redirectUri: meta.redirectUri\n  };\n  return PKCE.getToken(sdk, getTokenParams, urls)\n  .then(function(res) {\n    validateResponse(res, getTokenParams);\n    return res;\n  })\n  .fin(function() {\n    PKCE.clearMeta(sdk);\n  });\n}\n\nfunction validateResponse(res, oauthParams) {\n  if (res['error'] || res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nfunction handleOAuthResponse(sdk, oauthParams, res, urls) {\n  urls = urls || {};\n\n  var responseType = oauthParams.responseType;\n  var scopes = util.clone(oauthParams.scopes);\n  var clientId = oauthParams.clientId || sdk.options.clientId;\n\n  return new Q()\n  .then(function() {\n    validateResponse(res, oauthParams);\n\n    // We do not support \"hybrid\" scenarios where the response includes both a code and a token.\n    // If the response contains a code it is used immediately to obtain new tokens.\n    if (res['code']) {\n      responseType = ['token', 'id_token']; // what we expect the code to provide us\n      return exchangeCodeForToken(sdk, oauthParams, res['code'], urls);\n    }\n    return res;\n  }).then(function(res) {\n    var tokenDict = {};\n\n    if (res['access_token']) {\n      tokenDict['token'] = {\n        accessToken: res['access_token'],\n        expiresAt: Number(res['expires_in']) + Math.floor(Date.now()/1000),\n        tokenType: res['token_type'],\n        scopes: scopes,\n        authorizeUrl: urls.authorizeUrl,\n        userinfoUrl: urls.userinfoUrl\n      };\n    }\n\n    if (res['id_token']) {\n      var jwt = sdk.token.decode(res['id_token']);\n\n      var idToken = {\n        idToken: res['id_token'],\n        claims: jwt.payload,\n        expiresAt: jwt.payload.exp,\n        scopes: scopes,\n        authorizeUrl: urls.authorizeUrl,\n        issuer: urls.issuer,\n        clientId: clientId\n      };\n\n      var validationParams = {\n        clientId: clientId,\n        issuer: urls.issuer,\n        nonce: oauthParams.nonce\n      };\n\n      if (oauthParams.ignoreSignature !== undefined) {\n        validationParams.ignoreSignature = oauthParams.ignoreSignature;\n      }\n\n      return verifyToken(sdk, idToken, validationParams)\n      .then(function() {\n        tokenDict['id_token'] = idToken;\n        return tokenDict;\n      });\n    }\n\n    return tokenDict;\n  })\n  .then(function(tokenDict) {\n    if (!Array.isArray(responseType)) {\n      return tokenDict[responseType];\n    }\n\n    // Validate response against tokenTypes\n    var validateTokenTypes =  ['token', 'id_token'];\n    validateTokenTypes.filter(function(key) {\n      return (responseType.indexOf(key) !== -1);\n    }).forEach(function(key) {\n      if (!tokenDict[key]) {\n        throw new AuthSdkError('Unable to parse OAuth flow response: ' + key + ' was not returned.');\n      }     \n    });\n\n    // Create token array in the order of the responseType array\n    return responseType.map(function(item) {\n      return tokenDict[item];\n    });\n  });\n}\n\nfunction getDefaultOAuthParams(sdk) {\n  return {\n    pkce: sdk.options.pkce || false,\n    clientId: sdk.options.clientId,\n    redirectUri: sdk.options.redirectUri || window.location.href,\n    responseType: 'id_token',\n    responseMode: 'okta_post_message',\n    state: oauthUtil.generateState(),\n    nonce: oauthUtil.generateNonce(),\n    scopes: ['openid', 'email'],\n    ignoreSignature: sdk.options.ignoreSignature\n  };\n}\n\nfunction convertOAuthParamsToQueryParams(oauthParams) {\n  // Quick validation\n  if (!oauthParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (util.isString(oauthParams.responseType) && oauthParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthQueryParams = util.removeNils({\n    'client_id': oauthParams.clientId,\n    'code_challenge': oauthParams.codeChallenge,\n    'code_challenge_method': oauthParams.codeChallengeMethod,\n    'display': oauthParams.display,\n    'idp': oauthParams.idp,\n    'idp_scope': oauthParams.idpScope,\n    'login_hint': oauthParams.loginHint,\n    'max_age': oauthParams.maxAge,\n    'nonce': oauthParams.nonce,\n    'prompt': oauthParams.prompt,\n    'redirect_uri': oauthParams.redirectUri,\n    'response_mode': oauthParams.responseMode,\n    'response_type': oauthParams.responseType,\n    'sessionToken': oauthParams.sessionToken,\n    'state': oauthParams.state,\n  });\n\n  ['idp_scope', 'response_type'].forEach( function( mayBeArray ) { \n    if (Array.isArray(oauthQueryParams[mayBeArray])) {\n      oauthQueryParams[mayBeArray] = oauthQueryParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (oauthParams.responseType.indexOf('id_token') !== -1 &&\n      oauthParams.scopes.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthQueryParams.scope = oauthParams.scopes.join(' ');\n  }\n\n  return oauthQueryParams;\n}\n\nfunction buildAuthorizeParams(oauthParams) {\n  var oauthQueryParams = convertOAuthParamsToQueryParams(oauthParams);\n  return util.toQueryParams(oauthQueryParams);\n}\n\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nfunction getToken(sdk, oauthOptions, options) {\n  oauthOptions = oauthOptions || {};\n  options = options || {};\n\n  return prepareOauthParams(sdk, oauthOptions)\n  .then(function(oauthParams) {\n\n    // Start overriding any options that don't make sense\n    var sessionTokenOverrides = {\n      prompt: 'none',\n      responseMode: 'okta_post_message',\n      display: null\n    };\n\n    var idpOverrides = {\n      display: 'popup'\n    };\n\n    if (oauthOptions.sessionToken) {\n      util.extend(oauthParams, sessionTokenOverrides);\n    } else if (oauthOptions.idp) {\n      util.extend(oauthParams, idpOverrides);\n    }\n\n    // Use the query params to build the authorize url\n    var requestUrl,\n        endpoint,\n        urls;\n    try {\n      // Get authorizeUrl and issuer\n      urls = oauthUtil.getOAuthUrls(sdk, oauthParams, options);\n      endpoint = oauthOptions.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(oauthParams);\n    } catch (e) {\n      return Q.reject(e);\n    }\n\n    // Determine the flow type\n    var flowType;\n    if (oauthParams.sessionToken || oauthParams.display === null) {\n      flowType = 'IFRAME';\n    } else if (oauthParams.display === 'popup') {\n      flowType = 'POPUP';\n    } else {\n      flowType = 'IMPLICIT';\n    }\n\n    function getOrigin(url) {\n      /* eslint-disable-next-line no-useless-escape */\n      var originRegex = /^(https?\\:\\/\\/)?([^:\\/?#]*(?:\\:[0-9]+)?)/;\n      return originRegex.exec(url)[0];\n    }\n\n    // Execute the flow type\n    switch (flowType) {\n      case 'IFRAME':\n        var iframePromise = addPostMessageListener(sdk, options.timeout, oauthParams.state);\n        var iframeEl = oauthUtil.loadFrame(requestUrl);\n        return iframePromise\n          .then(function(res) {\n            return handleOAuthResponse(sdk, oauthParams, res, urls);\n          })\n          .fin(function() {\n            if (document.body.contains(iframeEl)) {\n              iframeEl.parentElement.removeChild(iframeEl);\n            }\n          });\n\n      case 'POPUP': // eslint-disable-line no-case-declarations\n        var popupPromise;\n\n        // Add listener on postMessage before window creation, so\n        // postMessage isn't triggered before we're listening\n        if (oauthParams.responseMode === 'okta_post_message') {\n          if (!sdk.features.isPopupPostMessageSupported()) {\n            return Q.reject(new AuthSdkError('This browser doesn\\'t have full postMessage support'));\n          }\n          popupPromise = addPostMessageListener(sdk, options.timeout, oauthParams.state);\n        }\n\n        // Create the window\n        var windowOptions = {\n          popupTitle: options.popupTitle\n        };\n        var windowEl = oauthUtil.loadPopup(requestUrl, windowOptions);\n\n        // Poll until we get a valid hash fragment\n        if (oauthParams.responseMode === 'fragment') {\n          var windowOrigin = getOrigin(sdk.idToken.authorize._getLocationHref());\n          var redirectUriOrigin = getOrigin(oauthParams.redirectUri);\n          if (windowOrigin !== redirectUriOrigin) {\n            return Q.reject(new AuthSdkError('Using fragment, the redirectUri origin (' + redirectUriOrigin +\n              ') must match the origin of this page (' + windowOrigin + ')'));\n          }\n          popupPromise = addFragmentListener(sdk, windowEl, options.timeout);\n        }\n\n        // Both postMessage and fragment require a poll to see if the popup closed\n        var popupDeferred = Q.defer();\n        /* eslint-disable-next-line no-case-declarations, no-inner-declarations */\n        function hasClosed(win) {\n          if (win.closed) {\n            popupDeferred.reject(new AuthSdkError('Unable to parse OAuth flow response'));\n          }\n        }\n        var closePoller = setInterval(function() {\n          hasClosed(windowEl);\n        }, 500);\n\n        // Proxy the promise results into the deferred\n        popupPromise\n        .then(function(res) {\n          popupDeferred.resolve(res);\n        })\n        .fail(function(err) {\n          popupDeferred.reject(err);\n        });\n\n        return popupDeferred.promise\n          .then(function(res) {\n            return handleOAuthResponse(sdk, oauthParams, res, urls);\n          })\n          .fin(function() {\n            if (!windowEl.closed) {\n              clearInterval(closePoller);\n              windowEl.close();\n            }\n          });\n\n      default:\n        return Q.reject(new AuthSdkError('The full page redirect flow is not supported'));\n    }\n  });\n}\n\nfunction getWithoutPrompt(sdk, oauthOptions, options) {\n  var oauthParams = util.clone(oauthOptions) || {};\n  util.extend(oauthParams, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, oauthParams, options);\n}\n\nfunction getWithPopup(sdk, oauthOptions, options) {\n  var oauthParams = util.clone(oauthOptions) || {};\n  util.extend(oauthParams, {\n    display: 'popup',\n    responseMode: 'okta_post_message'\n  });\n  return getToken(sdk, oauthParams, options);\n}\n\nfunction prepareOauthParams(sdk, oauthOptions) {\n  // clone and prepare options\n  oauthOptions = util.clone(oauthOptions) || {};\n\n  // OKTA-242989: support for grantType will be removed in 3.0 \n  if (oauthOptions.grantType === 'authorization_code') {\n    oauthOptions.pkce = true;\n  }\n\n  // build params using defaults + options\n  var oauthParams = getDefaultOAuthParams(sdk);\n  util.extend(oauthParams, oauthOptions);\n\n  if (oauthParams.pkce !== true) {\n    return Q.resolve(oauthParams);\n  }\n\n  // PKCE flow\n  if (!sdk.features.isPKCESupported()) {\n    return Q.reject(new AuthSdkError('This browser doesn\\'t support PKCE'));\n  }\n\n  // set default code challenge method, if none provided\n  if (!oauthParams.codeChallengeMethod) {\n    oauthParams.codeChallengeMethod = PKCE.DEFAULT_CODE_CHALLENGE_METHOD;\n  }\n\n  // responseType is forced\n  oauthParams.responseType = 'code';\n\n  return oauthUtil.getWellKnown(sdk, null)\n    .then(function(res) {\n      var methods = res['code_challenge_methods_supported'] || [];\n      if (methods.indexOf(oauthParams.codeChallengeMethod) === -1) {\n        throw new AuthSdkError('Invalid code_challenge_method');\n      }\n    })\n    .then(function() {\n      // PKCE authorization_code flow\n      var codeVerifier = PKCE.generateVerifier(oauthParams.codeVerifier);\n\n      // We will need these values after redirect when we call /token\n      var meta = {\n        codeVerifier: codeVerifier,\n        redirectUri: oauthParams.redirectUri\n      };\n      PKCE.saveMeta(sdk, meta);\n\n      return PKCE.computeChallenge(codeVerifier);\n    })\n    .then(function(codeChallenge) {\n\n      // Clone/copy the params. Set codeChallenge\n      var clonedParams = util.clone(oauthParams) || {};\n      util.extend(clonedParams, oauthParams, {\n        codeChallenge: codeChallenge,\n      });\n      return clonedParams;\n    });\n}\n\nfunction getWithRedirect(sdk, oauthOptions, options) {\n  oauthOptions = util.clone(oauthOptions) || {};\n\n  return prepareOauthParams(sdk, oauthOptions)\n    .then(function(oauthParams) {\n\n      // Dynamically set the responseMode unless the user has provided one\n      // Server-side flow requires query. Client-side apps usually prefer fragment.\n      if (!oauthOptions.responseMode) {\n        if (oauthParams.responseType.includes('code') && !oauthParams.pkce) {\n          // server-side flows using authorization_code\n          oauthParams.responseMode = 'query';\n        } else {\n          // general case, client-side flow.\n          oauthParams.responseMode = 'fragment';\n        }\n      }\n\n      var urls = oauthUtil.getOAuthUrls(sdk, oauthParams, options);\n      var requestUrl = urls.authorizeUrl + buildAuthorizeParams(oauthParams);\n\n      // Set session cookie to store the oauthParams\n      cookies.set(config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME, JSON.stringify({\n        responseType: oauthParams.responseType,\n        state: oauthParams.state,\n        nonce: oauthParams.nonce,\n        scopes: oauthParams.scopes,\n        clientId: oauthParams.clientId,\n        urls: urls,\n        ignoreSignature: oauthParams.ignoreSignature\n      }));\n\n      // Set nonce cookie for servers to validate nonce in id_token\n      cookies.set(config.REDIRECT_NONCE_COOKIE_NAME, oauthParams.nonce);\n\n      // Set state cookie for servers to validate state\n      cookies.set(config.REDIRECT_STATE_COOKIE_NAME, oauthParams.state);\n\n      sdk.token.getWithRedirect._setLocation(requestUrl);\n    });\n}\n\nfunction renewToken(sdk, token) {\n  if (!oauthUtil.isToken(token)) {\n    return Q.reject(new AuthSdkError('Renew must be passed a token with ' +\n      'an array of scopes and an accessToken or idToken'));\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (token.accessToken) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  return sdk.token.getWithoutPrompt({\n    responseType: responseType,\n    scopes: token.scopes\n  }, {\n    authorizeUrl: token.authorizeUrl,\n    userinfoUrl: token.userinfoUrl,\n    issuer: token.issuer\n  });\n}\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction parseFromUrl(sdk, url) {\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var hash = nativeLoc.hash;\n  if (url) {\n    hash = url.substring(url.indexOf('#'));\n  }\n\n  if (!hash) {\n    return Q.reject(new AuthSdkError('Unable to parse a token from the url'));\n  }\n\n  var oauthParamsCookie = cookies.get(config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME);\n  if (!oauthParamsCookie) {\n    return Q.reject(new AuthSdkError('Unable to retrieve OAuth redirect params cookie'));\n  }\n\n  try {\n    var oauthParams = JSON.parse(oauthParamsCookie);\n    var urls = oauthParams.urls;\n    delete oauthParams.urls;\n    cookies.delete(config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME);\n  } catch(e) {\n    return Q.reject(new AuthSdkError('Unable to parse the ' +\n      config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME + ' cookie: ' + e.message));\n  }\n\n  return Q.resolve(oauthUtil.hashToObject(hash))\n    .then(function(res) {\n      if (!url) {\n        // Remove the hash from the url\n        removeHash(sdk);\n      }\n      return handleOAuthResponse(sdk, oauthParams, res, urls);\n    });\n}\n\nfunction getUserInfo(sdk, accessTokenObject) {\n  if (!accessTokenObject ||\n      (!oauthUtil.isToken(accessTokenObject) && !accessTokenObject.accessToken && !accessTokenObject.userinfoUrl)) {\n    return Q.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n  return http.httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n  .fail(function(err) {\n    if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n      var authenticateHeader;\n      if (err.xhr.headers && util.isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n        authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n      } else if (util.isFunction(err.xhr.getResponseHeader)) {\n        authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n      }\n      if (authenticateHeader) {\n        var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n        var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n        var error = errorMatches[1];\n        var errorDescription = errorDescriptionMatches[1];\n        if (error && errorDescription) {\n          err = new OAuthError(error, errorDescription);\n        }\n      }\n    }\n    throw err;\n  });\n}\n\nmodule.exports = {\n  getToken: getToken,\n  getWithoutPrompt: getWithoutPrompt,\n  getWithPopup: getWithPopup,\n  getWithRedirect: getWithRedirect,\n  parseFromUrl: parseFromUrl,\n  decodeToken: decodeToken,\n  renewToken: renewToken,\n  getUserInfo: getUserInfo,\n  verifyToken: verifyToken,\n  handleOAuthResponse: handleOAuthResponse,\n  prepareOauthParams: prepareOauthParams\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../../node_modules/@okta/okta-auth-js/lib/token.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}}],"sources":{"../../node_modules/@okta/okta-auth-js/lib/token.js":"/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nvar http          = require('./http');\nvar util          = require('./util');\nvar oauthUtil     = require('./oauthUtil');\nvar Q             = require('q');\nvar sdkCrypto     = require('./crypto');\nvar AuthSdkError  = require('./errors/AuthSdkError');\nvar OAuthError    = require('./errors/OAuthError');\nvar config        = require('./config');\nvar cookies       = require('./browser/browserStorage').storage;\nvar PKCE          = require('./pkce');\n\nfunction decodeToken(token) {\n  var jwt = token.split('.');\n  var decodedToken;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(util.base64UrlToString(jwt[0])),\n      payload: JSON.parse(util.base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch(e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n\nfunction verifyToken(sdk, token, validationParams) {\n  return new Q()\n  .then(function() {\n    if (!token || !token.idToken) {\n      throw new AuthSdkError('Only idTokens may be verified');\n    }\n\n    var jwt = decodeToken(token.idToken);\n\n    var validationOptions = {\n      clientId: sdk.options.clientId,\n      issuer: sdk.options.issuer || sdk.options.url,\n      ignoreSignature: sdk.options.ignoreSignature\n    };\n\n    util.extend(validationOptions, validationParams);\n\n    // Standard claim validation\n    oauthUtil.validateClaims(sdk, jwt.payload, validationOptions);\n\n    // If the browser doesn't support native crypto or we choose not\n    // to verify the signature, bail early\n    if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n      return token;\n    }\n\n    return oauthUtil.getKey(sdk, token.issuer, jwt.header.kid)\n    .then(function(key) {\n      return sdkCrypto.verifyToken(token.idToken, key);\n    })\n    .then(function(valid) {\n      if (!valid) {\n        throw new AuthSdkError('The token signature is not valid');\n      }\n      return token;\n    });\n  });\n}\n\nfunction addPostMessageListener(sdk, timeout, state) {\n  var deferred = Q.defer();\n\n  function responseHandler(e) {\n    if (!e.data ||\n        e.origin !== sdk.options.url ||\n        (e.data && util.isString(state) && e.data.state !== state)) {\n      return;\n    }\n    deferred.resolve(e.data);\n  }\n\n  oauthUtil.addListener(window, 'message', responseHandler);\n\n  return deferred.promise.timeout(timeout || 120000, new AuthSdkError('OAuth flow timed out'))\n    .fin(function() {\n      oauthUtil.removeListener(window, 'message', responseHandler);\n    });\n}\n\nfunction addFragmentListener(sdk, windowEl, timeout) {\n  var deferred = Q.defer();\n\n  function hashChangeHandler() {\n    /*\n      We are only able to access window.location.hash on a window\n      that has the same domain. A try/catch is necessary because\n      there's no other way to determine that the popup is in\n      another domain. When we try to access a window on another\n      domain, an error is thrown.\n    */\n    try {\n      if (windowEl &&\n          windowEl.location &&\n          windowEl.location.hash) {\n        deferred.resolve(oauthUtil.hashToObject(windowEl.location.hash));\n      } else if (windowEl && !windowEl.closed) {\n        setTimeout(hashChangeHandler, 500);\n      }\n    } catch (err) {\n      setTimeout(hashChangeHandler, 500);\n    }\n  }\n\n  hashChangeHandler();\n\n  return deferred.promise.timeout(timeout || 120000, new AuthSdkError('OAuth flow timed out'));\n}\n\nfunction exchangeCodeForToken(sdk, oauthParams, authorizationCode, urls) {\n  // PKCE authorization_code flow\n  // Retrieve saved values and build oauthParams for call to /token\n  var meta = PKCE.loadMeta(sdk);\n  var getTokenParams = {\n    clientId: oauthParams.clientId,\n    authorizationCode: authorizationCode,\n    codeVerifier: meta.codeVerifier,\n    redirectUri: meta.redirectUri\n  };\n  return PKCE.getToken(sdk, getTokenParams, urls)\n  .then(function(res) {\n    validateResponse(res, getTokenParams);\n    return res;\n  })\n  .fin(function() {\n    PKCE.clearMeta(sdk);\n  });\n}\n\nfunction validateResponse(res, oauthParams) {\n  if (res['error'] || res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nfunction handleOAuthResponse(sdk, oauthParams, res, urls) {\n  urls = urls || {};\n\n  var responseType = oauthParams.responseType;\n  var scopes = util.clone(oauthParams.scopes);\n  var clientId = oauthParams.clientId || sdk.options.clientId;\n\n  return new Q()\n  .then(function() {\n    validateResponse(res, oauthParams);\n\n    // We do not support \"hybrid\" scenarios where the response includes both a code and a token.\n    // If the response contains a code it is used immediately to obtain new tokens.\n    if (res['code']) {\n      responseType = ['token', 'id_token']; // what we expect the code to provide us\n      return exchangeCodeForToken(sdk, oauthParams, res['code'], urls);\n    }\n    return res;\n  }).then(function(res) {\n    var tokenDict = {};\n\n    if (res['access_token']) {\n      tokenDict['token'] = {\n        accessToken: res['access_token'],\n        expiresAt: Number(res['expires_in']) + Math.floor(Date.now()/1000),\n        tokenType: res['token_type'],\n        scopes: scopes,\n        authorizeUrl: urls.authorizeUrl,\n        userinfoUrl: urls.userinfoUrl\n      };\n    }\n\n    if (res['id_token']) {\n      var jwt = sdk.token.decode(res['id_token']);\n\n      var idToken = {\n        idToken: res['id_token'],\n        claims: jwt.payload,\n        expiresAt: jwt.payload.exp,\n        scopes: scopes,\n        authorizeUrl: urls.authorizeUrl,\n        issuer: urls.issuer,\n        clientId: clientId\n      };\n\n      var validationParams = {\n        clientId: clientId,\n        issuer: urls.issuer,\n        nonce: oauthParams.nonce\n      };\n\n      if (oauthParams.ignoreSignature !== undefined) {\n        validationParams.ignoreSignature = oauthParams.ignoreSignature;\n      }\n\n      return verifyToken(sdk, idToken, validationParams)\n      .then(function() {\n        tokenDict['id_token'] = idToken;\n        return tokenDict;\n      });\n    }\n\n    return tokenDict;\n  })\n  .then(function(tokenDict) {\n    if (!Array.isArray(responseType)) {\n      return tokenDict[responseType];\n    }\n\n    // Validate response against tokenTypes\n    var validateTokenTypes =  ['token', 'id_token'];\n    validateTokenTypes.filter(function(key) {\n      return (responseType.indexOf(key) !== -1);\n    }).forEach(function(key) {\n      if (!tokenDict[key]) {\n        throw new AuthSdkError('Unable to parse OAuth flow response: ' + key + ' was not returned.');\n      }     \n    });\n\n    // Create token array in the order of the responseType array\n    return responseType.map(function(item) {\n      return tokenDict[item];\n    });\n  });\n}\n\nfunction getDefaultOAuthParams(sdk) {\n  return {\n    pkce: sdk.options.pkce || false,\n    clientId: sdk.options.clientId,\n    redirectUri: sdk.options.redirectUri || window.location.href,\n    responseType: 'id_token',\n    responseMode: 'okta_post_message',\n    state: oauthUtil.generateState(),\n    nonce: oauthUtil.generateNonce(),\n    scopes: ['openid', 'email'],\n    ignoreSignature: sdk.options.ignoreSignature\n  };\n}\n\nfunction convertOAuthParamsToQueryParams(oauthParams) {\n  // Quick validation\n  if (!oauthParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (util.isString(oauthParams.responseType) && oauthParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthQueryParams = util.removeNils({\n    'client_id': oauthParams.clientId,\n    'code_challenge': oauthParams.codeChallenge,\n    'code_challenge_method': oauthParams.codeChallengeMethod,\n    'display': oauthParams.display,\n    'idp': oauthParams.idp,\n    'idp_scope': oauthParams.idpScope,\n    'login_hint': oauthParams.loginHint,\n    'max_age': oauthParams.maxAge,\n    'nonce': oauthParams.nonce,\n    'prompt': oauthParams.prompt,\n    'redirect_uri': oauthParams.redirectUri,\n    'response_mode': oauthParams.responseMode,\n    'response_type': oauthParams.responseType,\n    'sessionToken': oauthParams.sessionToken,\n    'state': oauthParams.state,\n  });\n\n  ['idp_scope', 'response_type'].forEach( function( mayBeArray ) { \n    if (Array.isArray(oauthQueryParams[mayBeArray])) {\n      oauthQueryParams[mayBeArray] = oauthQueryParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (oauthParams.responseType.indexOf('id_token') !== -1 &&\n      oauthParams.scopes.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else {\n    oauthQueryParams.scope = oauthParams.scopes.join(' ');\n  }\n\n  return oauthQueryParams;\n}\n\nfunction buildAuthorizeParams(oauthParams) {\n  var oauthQueryParams = convertOAuthParamsToQueryParams(oauthParams);\n  return util.toQueryParams(oauthQueryParams);\n}\n\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nfunction getToken(sdk, oauthOptions, options) {\n  oauthOptions = oauthOptions || {};\n  options = options || {};\n\n  return prepareOauthParams(sdk, oauthOptions)\n  .then(function(oauthParams) {\n\n    // Start overriding any options that don't make sense\n    var sessionTokenOverrides = {\n      prompt: 'none',\n      responseMode: 'okta_post_message',\n      display: null\n    };\n\n    var idpOverrides = {\n      display: 'popup'\n    };\n\n    if (oauthOptions.sessionToken) {\n      util.extend(oauthParams, sessionTokenOverrides);\n    } else if (oauthOptions.idp) {\n      util.extend(oauthParams, idpOverrides);\n    }\n\n    // Use the query params to build the authorize url\n    var requestUrl,\n        endpoint,\n        urls;\n    try {\n      // Get authorizeUrl and issuer\n      urls = oauthUtil.getOAuthUrls(sdk, oauthParams, options);\n      endpoint = oauthOptions.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(oauthParams);\n    } catch (e) {\n      return Q.reject(e);\n    }\n\n    // Determine the flow type\n    var flowType;\n    if (oauthParams.sessionToken || oauthParams.display === null) {\n      flowType = 'IFRAME';\n    } else if (oauthParams.display === 'popup') {\n      flowType = 'POPUP';\n    } else {\n      flowType = 'IMPLICIT';\n    }\n\n    function getOrigin(url) {\n      /* eslint-disable-next-line no-useless-escape */\n      var originRegex = /^(https?\\:\\/\\/)?([^:\\/?#]*(?:\\:[0-9]+)?)/;\n      return originRegex.exec(url)[0];\n    }\n\n    // Execute the flow type\n    switch (flowType) {\n      case 'IFRAME':\n        var iframePromise = addPostMessageListener(sdk, options.timeout, oauthParams.state);\n        var iframeEl = oauthUtil.loadFrame(requestUrl);\n        return iframePromise\n          .then(function(res) {\n            return handleOAuthResponse(sdk, oauthParams, res, urls);\n          })\n          .fin(function() {\n            if (document.body.contains(iframeEl)) {\n              iframeEl.parentElement.removeChild(iframeEl);\n            }\n          });\n\n      case 'POPUP': // eslint-disable-line no-case-declarations\n        var popupPromise;\n\n        // Add listener on postMessage before window creation, so\n        // postMessage isn't triggered before we're listening\n        if (oauthParams.responseMode === 'okta_post_message') {\n          if (!sdk.features.isPopupPostMessageSupported()) {\n            return Q.reject(new AuthSdkError('This browser doesn\\'t have full postMessage support'));\n          }\n          popupPromise = addPostMessageListener(sdk, options.timeout, oauthParams.state);\n        }\n\n        // Create the window\n        var windowOptions = {\n          popupTitle: options.popupTitle\n        };\n        var windowEl = oauthUtil.loadPopup(requestUrl, windowOptions);\n\n        // Poll until we get a valid hash fragment\n        if (oauthParams.responseMode === 'fragment') {\n          var windowOrigin = getOrigin(sdk.idToken.authorize._getLocationHref());\n          var redirectUriOrigin = getOrigin(oauthParams.redirectUri);\n          if (windowOrigin !== redirectUriOrigin) {\n            return Q.reject(new AuthSdkError('Using fragment, the redirectUri origin (' + redirectUriOrigin +\n              ') must match the origin of this page (' + windowOrigin + ')'));\n          }\n          popupPromise = addFragmentListener(sdk, windowEl, options.timeout);\n        }\n\n        // Both postMessage and fragment require a poll to see if the popup closed\n        var popupDeferred = Q.defer();\n        /* eslint-disable-next-line no-case-declarations, no-inner-declarations */\n        function hasClosed(win) {\n          if (win.closed) {\n            popupDeferred.reject(new AuthSdkError('Unable to parse OAuth flow response'));\n          }\n        }\n        var closePoller = setInterval(function() {\n          hasClosed(windowEl);\n        }, 500);\n\n        // Proxy the promise results into the deferred\n        popupPromise\n        .then(function(res) {\n          popupDeferred.resolve(res);\n        })\n        .fail(function(err) {\n          popupDeferred.reject(err);\n        });\n\n        return popupDeferred.promise\n          .then(function(res) {\n            return handleOAuthResponse(sdk, oauthParams, res, urls);\n          })\n          .fin(function() {\n            if (!windowEl.closed) {\n              clearInterval(closePoller);\n              windowEl.close();\n            }\n          });\n\n      default:\n        return Q.reject(new AuthSdkError('The full page redirect flow is not supported'));\n    }\n  });\n}\n\nfunction getWithoutPrompt(sdk, oauthOptions, options) {\n  var oauthParams = util.clone(oauthOptions) || {};\n  util.extend(oauthParams, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, oauthParams, options);\n}\n\nfunction getWithPopup(sdk, oauthOptions, options) {\n  var oauthParams = util.clone(oauthOptions) || {};\n  util.extend(oauthParams, {\n    display: 'popup',\n    responseMode: 'okta_post_message'\n  });\n  return getToken(sdk, oauthParams, options);\n}\n\nfunction prepareOauthParams(sdk, oauthOptions) {\n  // clone and prepare options\n  oauthOptions = util.clone(oauthOptions) || {};\n\n  // OKTA-242989: support for grantType will be removed in 3.0 \n  if (oauthOptions.grantType === 'authorization_code') {\n    oauthOptions.pkce = true;\n  }\n\n  // build params using defaults + options\n  var oauthParams = getDefaultOAuthParams(sdk);\n  util.extend(oauthParams, oauthOptions);\n\n  if (oauthParams.pkce !== true) {\n    return Q.resolve(oauthParams);\n  }\n\n  // PKCE flow\n  if (!sdk.features.isPKCESupported()) {\n    return Q.reject(new AuthSdkError('This browser doesn\\'t support PKCE'));\n  }\n\n  // set default code challenge method, if none provided\n  if (!oauthParams.codeChallengeMethod) {\n    oauthParams.codeChallengeMethod = PKCE.DEFAULT_CODE_CHALLENGE_METHOD;\n  }\n\n  // responseType is forced\n  oauthParams.responseType = 'code';\n\n  return oauthUtil.getWellKnown(sdk, null)\n    .then(function(res) {\n      var methods = res['code_challenge_methods_supported'] || [];\n      if (methods.indexOf(oauthParams.codeChallengeMethod) === -1) {\n        throw new AuthSdkError('Invalid code_challenge_method');\n      }\n    })\n    .then(function() {\n      // PKCE authorization_code flow\n      var codeVerifier = PKCE.generateVerifier(oauthParams.codeVerifier);\n\n      // We will need these values after redirect when we call /token\n      var meta = {\n        codeVerifier: codeVerifier,\n        redirectUri: oauthParams.redirectUri\n      };\n      PKCE.saveMeta(sdk, meta);\n\n      return PKCE.computeChallenge(codeVerifier);\n    })\n    .then(function(codeChallenge) {\n\n      // Clone/copy the params. Set codeChallenge\n      var clonedParams = util.clone(oauthParams) || {};\n      util.extend(clonedParams, oauthParams, {\n        codeChallenge: codeChallenge,\n      });\n      return clonedParams;\n    });\n}\n\nfunction getWithRedirect(sdk, oauthOptions, options) {\n  oauthOptions = util.clone(oauthOptions) || {};\n\n  return prepareOauthParams(sdk, oauthOptions)\n    .then(function(oauthParams) {\n\n      // Dynamically set the responseMode unless the user has provided one\n      // Server-side flow requires query. Client-side apps usually prefer fragment.\n      if (!oauthOptions.responseMode) {\n        if (oauthParams.responseType.includes('code') && !oauthParams.pkce) {\n          // server-side flows using authorization_code\n          oauthParams.responseMode = 'query';\n        } else {\n          // general case, client-side flow.\n          oauthParams.responseMode = 'fragment';\n        }\n      }\n\n      var urls = oauthUtil.getOAuthUrls(sdk, oauthParams, options);\n      var requestUrl = urls.authorizeUrl + buildAuthorizeParams(oauthParams);\n\n      // Set session cookie to store the oauthParams\n      cookies.set(config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME, JSON.stringify({\n        responseType: oauthParams.responseType,\n        state: oauthParams.state,\n        nonce: oauthParams.nonce,\n        scopes: oauthParams.scopes,\n        clientId: oauthParams.clientId,\n        urls: urls,\n        ignoreSignature: oauthParams.ignoreSignature\n      }));\n\n      // Set nonce cookie for servers to validate nonce in id_token\n      cookies.set(config.REDIRECT_NONCE_COOKIE_NAME, oauthParams.nonce);\n\n      // Set state cookie for servers to validate state\n      cookies.set(config.REDIRECT_STATE_COOKIE_NAME, oauthParams.state);\n\n      sdk.token.getWithRedirect._setLocation(requestUrl);\n    });\n}\n\nfunction renewToken(sdk, token) {\n  if (!oauthUtil.isToken(token)) {\n    return Q.reject(new AuthSdkError('Renew must be passed a token with ' +\n      'an array of scopes and an accessToken or idToken'));\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (token.accessToken) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  return sdk.token.getWithoutPrompt({\n    responseType: responseType,\n    scopes: token.scopes\n  }, {\n    authorizeUrl: token.authorizeUrl,\n    userinfoUrl: token.userinfoUrl,\n    issuer: token.issuer\n  });\n}\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction parseFromUrl(sdk, url) {\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var hash = nativeLoc.hash;\n  if (url) {\n    hash = url.substring(url.indexOf('#'));\n  }\n\n  if (!hash) {\n    return Q.reject(new AuthSdkError('Unable to parse a token from the url'));\n  }\n\n  var oauthParamsCookie = cookies.get(config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME);\n  if (!oauthParamsCookie) {\n    return Q.reject(new AuthSdkError('Unable to retrieve OAuth redirect params cookie'));\n  }\n\n  try {\n    var oauthParams = JSON.parse(oauthParamsCookie);\n    var urls = oauthParams.urls;\n    delete oauthParams.urls;\n    cookies.delete(config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME);\n  } catch(e) {\n    return Q.reject(new AuthSdkError('Unable to parse the ' +\n      config.REDIRECT_OAUTH_PARAMS_COOKIE_NAME + ' cookie: ' + e.message));\n  }\n\n  return Q.resolve(oauthUtil.hashToObject(hash))\n    .then(function(res) {\n      if (!url) {\n        // Remove the hash from the url\n        removeHash(sdk);\n      }\n      return handleOAuthResponse(sdk, oauthParams, res, urls);\n    });\n}\n\nfunction getUserInfo(sdk, accessTokenObject) {\n  if (!accessTokenObject ||\n      (!oauthUtil.isToken(accessTokenObject) && !accessTokenObject.accessToken && !accessTokenObject.userinfoUrl)) {\n    return Q.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n  return http.httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n  .fail(function(err) {\n    if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n      var authenticateHeader;\n      if (err.xhr.headers && util.isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n        authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n      } else if (util.isFunction(err.xhr.getResponseHeader)) {\n        authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n      }\n      if (authenticateHeader) {\n        var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n        var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n        var error = errorMatches[1];\n        var errorDescription = errorDescriptionMatches[1];\n        if (error && errorDescription) {\n          err = new OAuthError(error, errorDescription);\n        }\n      }\n    }\n    throw err;\n  });\n}\n\nmodule.exports = {\n  getToken: getToken,\n  getWithoutPrompt: getWithoutPrompt,\n  getWithPopup: getWithPopup,\n  getWithRedirect: getWithRedirect,\n  parseFromUrl: parseFromUrl,\n  decodeToken: decodeToken,\n  renewToken: renewToken,\n  getUserInfo: getUserInfo,\n  verifyToken: verifyToken,\n  handleOAuthResponse: handleOAuthResponse,\n  prepareOauthParams: prepareOauthParams\n};\n"},"lineCount":735}},"error":null,"hash":"598003d84fca8a1412f38c3887640fb6","cacheData":{"env":{}}}